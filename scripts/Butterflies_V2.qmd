---
title: "Butterflies"
format: html
---

OK note to self, you need to save the file every time before running it I think. the errors that appear if you don't are incredible

Wowww, this takes heckin forever to knit

## Study Overview

```{r setup chunk}

# html view: https://htmlpreview.github.io/?https://github.com/lyraeal/BIOL-480D-Repo/blob/main/scripts/Butterflies_V2.html

# libraries: 
library(tidyverse) 
library(ggplot2)
# library(MuMIn)
# library(DHARMa)

```

## Data Overview

```{r data overview i}

# loading in the dataset
dat = readxl::read_xlsx("../files/ButterflyNIRData.xlsx")

head(dat)
```

```{r data overview ii}
# genus dat obtained like so: 
dat = dat %>% 
  mutate(genus = str_match(gsub("_", " ", dat$Species), "([A-Z,a-z]*) ")[,2]) %>% 
  as.data.frame()

# data about the butterfly
head(dat)[,c(1:2, 11, 24)]
```

### Other variables in the dataset

#### Predictor variables:

| Variable          | Description                                                    |
|-------------------------|-----------------------------------------------|
| Species           | species name                                                   |
| temp.mean         | mean annual temperature (°C) across a species' range           |
| temp.min          | mimimum annual temperature (°C) across a species' range        |
| temp.max          | maximum annual temperature (°C) across a species' range        |
| precip.mean       | mean of annual precipitation sum (mm) across a species' range  |
| SolarRadi         | mean solar irradiation (kJ m-2 day-1) across a species' range  |
| WaterVapor        | water vapour pressure (kPa)                                    |
| Isothermality     | isothermality                                                  |
| PrecipSeasonality | precipitation seasonality                                      |
| TempSeasonality   | temperature seasonality                                        |
| Size              | Size (cm2) measured from one side of the both fore-/hind-wings |

```{r data overview iii}

# predictor var = different climactic measurements
head(dat)[,c(3:11)]
```

| Variable | Description           |
|----------|-----------------------|
| B        | basal wing            |
| E        | entire wings          |
| T        | abdomen-thorax region |
| Dors     | dorsal wings          |
| Vent     | ventral wings         |

![](images/butterfly_loc.png)

| Variable | Description                                        |
|----------|----------------------------------------------------|
| Vis      | the mean reflectance in the visible range (UV+VIS) |
| Nir      | the mean reflectance in the near-infared range     |

```{r data overview iv}

# response var set 1 = vis
head(dat)[,12:17]

# response var set 2 = nir
head(dat)[,18:23]
```

Our data currently groups together the dorsal and ventral sides with basal, entire, and abdomen / thorax (BET). Since we wanted to look only at the interaction between BET with the climactic variables, we separated out the dorsal and ventral into its own column, and BET into its own columns. 

```{r long dat}

# separating out dorsal / ventral and B / E / T
longdat = dat %>%
  pivot_longer(12:23,
               names_pattern = "([A-Z]i[a-z])([A-Z][a-z]*)([A-Z])",
               names_to = c(".value", "dorvent", "BET"))

longdat[,c(1, 13:16)] %>% head(5)

```

So now let's run the model! For our global model (aka our model with what we think is the maximum predictors and interactions that the model should have, we decided to look at solar radiation, mean precipitation, water vapor pressure, and isothermality). We chose to look at these variables since we expected them to have effects on our response variables. They are climate variables that have large implications for butterfly life and wing reflectance. Temperature mean and isothermality both have to do with temperature regulation. Mean precipitation and water vapor both have to do with moisture regulation, which we hypothesize are connected to wing area and general reflectance. We also expect solar radiation to impact reflectance directly.

```{r model attempt 1}

global_mod_vis = lme4::lmer(Vis ~ BET*SolarRadi + BET*precip.mean + BET*WaterVapor + BET*Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = longdat, na.action = "na.fail")

```

When running the model, we immediately ran into a warning that our predictor variables are on different scales, and to accomodate for this, we decided to convert all our values to z-scores so they could be on similar scales. 

Since our data is not normally distributed, we did a robust z-score. 

```{r z-score}

# robbed from julian
# jk it's called rob cause it's a robust z_score
# but i did rob it, that parts not a lie
jull_rob.zscore <- function(df){
  mad.cols <- mad.temp <- med.cols <- c()
  z.score <- data.frame()
  for(i in 1:length(colnames(df))){
    for(j in 1:length(df[,i])){
      mad.temp[j] <- abs(as.numeric(df[j,i]) - median((df[,i])))
    }
    mad.cols[i] <- median((mad.temp))
    med.cols[i] <- median(as.numeric(df[,i]))
  }
  for(i in 1:length(colnames(df))){
    for(j in 1:length(df[,i])){
      z.score[j,i] <- (0.6745*(df[j,i]-med.cols[i]))/mad.cols[i]
    }
  }
  colnames(z.score) <- colnames(df)
  rownames(z.score) <- rownames(df)
  return(z.score = z.score)
}

zscore_dat = cbind(longdat[c(1, 12:16)], jull_rob.zscore(as.data.frame(longdat)[2:11]))

zscore_dat %>% head(5)

```



```{r vis aic scores, warning = FALSE}

global_mod_vis = lme4::lmer(Vis ~ BET*SolarRadi + BET*precip.mean + BET*WaterVapor + BET*Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = zscore_dat, na.action = "na.fail")

aic_score_vis = MuMIn::dredge(global_mod_vis, beta = "none")

aic_score_vis %>% arrange(AICc) %>% head(3)

```

And the model best chosen by our AIC test is this one! We are including solar radiation, isothermality, mean temperature, and all of the interactions between those and BET. 

```{r vis aic-chosen model}

aic_mod_vis = zscore_dat %>% 
  lme4::lmer((Vis) ~ BET*SolarRadi + BET*Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = ., na.action = "na.fail")

aic_mod_vis %>% car::Anova()

```

Using the dredged model (and omitting the unecessary parameters), we were able to test how well the model fit the data using the DHARMa package.

```{r residuals on vis aic mod}

DHARMa::testDispersion(DHARMa::simulateResiduals(aic_mod_vis))

DHARMa::simulateResiduals(aic_mod_vis, n = 1000, plot = TRUE)

```

Well clearly, these aren't the greatest model fits. So from here we wanted to see if there were any models we could fit with different distributions that may improve things.

So far we have been using normal distributions to do everything and the last DHARMa reading was very clearly pretty terrible. 

As you can see, the distribution of `Vis` is skewed left, and both the `sqrt()` and the `log()` transformed versions look a lot better! We decided to try a model that tries transforming them like that. 

We also tried a glm with a gamma distribution and a log link. 

```{r creating alt vis mods, warning = FALSE}

zscore_dat$Vis %>% hist()
zscore_dat$Vis %>% sqrt %>% hist
zscore_dat$Vis %>% log %>% hist


aic_mod_vis_log = zscore_dat %>% 
  lme4::lmer(log(Vis) ~ BET*SolarRadi + BET*Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = ., na.action = "na.fail")

aic_mod_vis_sqrt = zscore_dat %>% 
  lme4::lmer(sqrt(Vis) ~ BET*SolarRadi + BET*Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = ., na.action = "na.fail")

aic_mod_vis_glm = zscore_dat %>% 
  lme4::glmer((Vis) ~ BET*SolarRadi + BET*Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = ., na.action = "na.fail", family = Gamma(link = "log"))


```

To check the fit of the model, we're looking at AIC scores again! 

Then we can compare the model with the best AIC to the residual plots we observed originally to see if there's any improvement!

```{r vis residuals check}

MuMIn::AICc(aic_mod_vis, aic_mod_vis_log, aic_mod_vis_sqrt, aic_mod_vis_glm)

DHARMa::simulateResiduals(aic_mod_vis, n = 1000, plot = TRUE)
DHARMa::simulateResiduals(aic_mod_vis_log, n = 1000, plot = TRUE)

```

It's still not great, but it looks a lot better! 

And now we repeat the process for the infrared data. 

```{r nir model aic, warning = FALSE}

global_mod_nir = lme4::lmer(Nir ~ BET*SolarRadi + BET*precip.mean + BET*WaterVapor + BET*Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = zscore_dat, na.action = "na.fail")

aic_score_nir = MuMIn::dredge(global_mod_nir, beta = "none")

aic_score_nir %>% arrange(AICc) %>% head(3)

```

Our most optimal model here is the inclusion of solar radiation, isothermality, and mean temperature, but with only solar radiation and mean temperature interacting with BET. 

creating alternate methods! 

```{r, warning = FALSE}

zscore_dat$Nir %>% hist()
zscore_dat$Nir %>% sqrt %>% hist
zscore_dat$Nir %>% log %>% hist

aic_mod_nir = zscore_dat %>% 
  lme4::lmer((Nir) ~ BET*SolarRadi + Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = ., na.action = "na.fail")

aic_mod_nir_log = zscore_dat %>% 
  lme4::lmer(log(Nir) ~ BET*SolarRadi + Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = ., na.action = "na.fail")

aic_mod_nir_sqrt = zscore_dat %>% 
  lme4::lmer(sqrt(Nir) ~ BET*SolarRadi + Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = ., na.action = "na.fail")

aic_mod_nir_glm = zscore_dat %>% 
  lme4::glmer((Nir) ~ BET*SolarRadi + BET*Isothermality + BET*temp.mean + (1|genus) + (1|dorvent) - 1, 
             data = ., na.action = "na.fail", family = Gamma(link = "log"))

```

Here it looks like the log transformed data is more skewed than either alternative, but the model still fit the best according to the AIC! 

```{r nir residuals check}

MuMIn::AICc(aic_mod_nir, aic_mod_nir_log, aic_mod_nir_sqrt, aic_mod_vis_glm)

DHARMa::simulateResiduals(aic_mod_nir, n = 1000, plot = TRUE)
DHARMa::simulateResiduals(aic_mod_nir_log, n = 1000, plot = TRUE)

```
